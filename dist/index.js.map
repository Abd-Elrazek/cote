{"version":3,"sources":["../src/index.js"],"names":["Discovery","require","Requester","Responder","Publisher","Subscriber","Sockend","Monitor","MonitoringTool","TimeBalancedRequester","PendingBalancedRequester","parser","_","defaultOptions","environment","useHostNames","broadcast","multicast","cote","options","environmentSettings","process","env","COTE_ENV","COTE_USE_HOST_NAMES","COTE_BROADCAST_ADDRESS","DOCKERCLOUD_IP_ADDRESS","undefined","COTE_MULTICAST_ADDRESS","checkInterval","int","COTE_CHECK_INTERVAL","helloInterval","COTE_HELLO_INTERVAL","helloLogsEnabled","bool","COTE_HELLO_LOGS_ENABLED","statusLogsEnabled","COTE_STATUS_LOGS_ENABLED","log","COTE_LOG","nodeTimeout","COTE_NODE_TIMEOUT","keys","Object","filter","k","slice","forEach","keyName","keyArray","split","map","toLowerCase","pluginName","shift","pluginObj","toUpperCase","setDefaults","components","component","setEnvironment","setUseHostNames","module","exports"],"mappings":"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","sourcesContent":["const Discovery = require('./components/discovery');\nconst Requester = require('./components/requester');\nconst Responder = require('./components/responder');\nconst Publisher = require('./components/publisher');\nconst Subscriber = require('./components/subscriber');\nconst Sockend = require('./components/sockend');\nconst Monitor = require('./components/monitor');\nconst MonitoringTool = require('./monitoring-tool');\nconst TimeBalancedRequester = require('./components/time-balanced-requester');\nconst PendingBalancedRequester = require('./components/pending-balanced-requester');\n\nconst parser = require('../lib/env-var-parser');\n\nconst _ = require('lodash');\n\nconst defaultOptions = {\n    environment: '',\n    useHostNames: false,\n    broadcast: null,\n    multicast: null,\n};\n\nconst cote = (options = {}) => {\n    const environmentSettings = {\n        environment: process.env.COTE_ENV,\n        useHostNames: !!process.env.COTE_USE_HOST_NAMES,\n        broadcast: process.env.COTE_BROADCAST_ADDRESS ||\n        (process.env.DOCKERCLOUD_IP_ADDRESS ? '10.7.255.255' : undefined),\n        multicast: process.env.COTE_MULTICAST_ADDRESS,\n        checkInterval: parser.int(process.env.COTE_CHECK_INTERVAL),\n        helloInterval: parser.int(process.env.COTE_HELLO_INTERVAL),\n        helloLogsEnabled: parser.bool(process.env.COTE_HELLO_LOGS_ENABLED),\n        statusLogsEnabled: parser.bool(process.env.COTE_STATUS_LOGS_ENABLED),\n        log: parser.bool(process.env.COTE_LOG),\n        nodeTimeout: parser.int(process.env.COTE_NODE_TIMEOUT),\n    };\n\n    const keys = Object.keys(process.env).filter((k) => k.slice(0, 15) == 'COTE_DISCOVERY_');\n\n    keys.forEach((k) => {\n        const keyName = k.slice(15);\n        const keyArray = keyName.split('_').map((k) => k.toLowerCase());\n        const pluginName = keyArray.shift();\n\n        const pluginObj = environmentSettings[pluginName] = environmentSettings[pluginName] || {};\n\n        keyArray.forEach((k) => {\n            pluginObj[k] = process.env[`COTE_DISCOVERY_${pluginName.toUpperCase()}_${k.toUpperCase()}`];\n        });\n\n        // Discovery plugins (such as redis) may not have access to real IP addresses.\n        // Therefore we automatically default to `true` for `COTE_USE_HOST_NAMES`,\n        // since host names are accurate.\n        environmentSettings.useHostNames = true;\n    });\n\n    options = { ...defaultOptions, ...environmentSettings, ...options };\n\n    Discovery.setDefaults(options);\n\n    const components = [\n        Requester,\n        Responder,\n        Publisher,\n        Subscriber,\n        Sockend,\n        TimeBalancedRequester,\n        PendingBalancedRequester,\n    ];\n\n    components.forEach(function(component) {\n        component.setEnvironment(options.environment);\n        component.setUseHostNames &&\n            component.setUseHostNames(options.useHostNames);\n    });\n\n    return cote;\n};\n\ncote.Requester = Requester;\ncote.Responder = Responder;\ncote.Publisher = Publisher;\ncote.Subscriber = Subscriber;\ncote.Sockend = Sockend;\ncote.Monitor = Monitor;\ncote.MonitoringTool = MonitoringTool;\ncote.TimeBalancedRequester = TimeBalancedRequester;\ncote.PendingBalancedRequester = PendingBalancedRequester;\n\nmodule.exports = cote();\n"],"file":"index.js"}